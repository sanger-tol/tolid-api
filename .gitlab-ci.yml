stages:
  - build
  - test

variables:
  DOCKER_IMAGE: $CI_REGISTRY/tol/sts/build-base:1.0.0
  DIND_IMAGE: $CI_REGISTRY/tol/sts/dind:1.0.0

.build-template: &build-template
  tags:
    - autoscale
  image: $DOCKER_IMAGE
  variables:
    DOCKER_TLS_CERTDIR: ''
  stage: build
  services:
    - name: $DIND_IMAGE
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/$NAME:$CI_COMMIT_REF_SLUG || true
    - docker build --pull --cache-from $CI_REGISTRY_IMAGE/$NAME:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE/$NAME:$CI_COMMIT_SHA -f $DOCKERFILE $PART
    - docker push $CI_REGISTRY_IMAGE/$NAME:$CI_COMMIT_SHA

build-api:
  <<: *build-template
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
    PART: "tolid-api"
    DOCKERFILE: "tolid-api/Dockerfile"
    NAME: "tolid-api"

test-api:
  tags:
    - autoscale
  image: $DOCKER_IMAGE
  stage: test
  services:
    - name: $DIND_IMAGE
      alias: docker
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker swarm init
    - docker stack deploy --with-registry-auth -c docker-compose.gitlab.yml -c docker-compose.gitlab-test.yml tolid
    - docker service logs tolid_tolid-api
    - sleep 120s
    - docker ps -a
    - docker ps -q -f name="tolid_tolid-api"
    - docker exec $(docker ps -q -f name="tolid_tolid-api") bash -c "pip3 install tox; tox"
